trigger:
  branches:
    include:
      - main  # Trigger pipeline on changes to the main branch
  paths:
    include:
    - app/*
    - mocks/*
    #- Dockerfile
    - pipelines/azure-pipelines.yml


pool:
  vmImage: ubuntu-latest

variables:
  dockerRegistryServiceConnection: 'acr-connection'
  imageRepository: 'claimstatus'
  containerRegistry: 'introspect2bacr.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/app/Dockerfile'
  tag: '$(Build.BuildId)'

# steps:
# - task: UseDotNet@2
#   inputs:
#     packageType: 'sdk'
#     version: '8.x'  # Specify your .NET version
#     installationPath: $(Agent.ToolsDirectory)/dotnet

# - script: dotnet build
#   displayName: 'Build the project'

# - script: dotnet test
#   displayName: 'Run unit tests'
stages:
- stage: Build
  displayName: 'Build and Push Image'
  jobs:
  - job: Build
    displayName: 'Build Docker Image'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      displayName: 'Build Docker Image'
      inputs:
        containerRegistry: '$(dockerRegistryServiceConnection)'
        repository: '$(imageRepository)'
        command: 'build'
        Dockerfile: '$(dockerfilePath)'
        tags: |
          $(tag)
          latest
        #arguments: '--build-arg BUILD_DATE="$(date -u +"%Y-%m-%dT%H:%M:%SZ")" --build-arg BUILD_VERSION="$(Build.BuildId)"'

    - task: Docker@2
      displayName: 'Push Image to ACR'
      inputs:
        containerRegistry: '$(dockerRegistryServiceConnection)'
        repository: '$(imageRepository)'
        command: 'push'
        tags: |
          $(tag)
          latest
# steps:
# # 1. Login to ACR using Azure CLI or Docker task (command: login)
# - task: Docker@2
#   displayName: Login to ACR
#   inputs:
#     command: login
#     containerRegistry: '$(dockerRegistryServiceConnection)'
# # 2. Build and Push the image
# - task: Docker@2
#   displayName: Build and Push Image
#   inputs:
#     containerRegistry: '$(dockerRegistryServiceConnection)'
#     repository: '$(imageRepository)'
#     command: 'buildAndPush'
#     # Important: Set buildContext to the folder *containing* ClaimStatus and mock
#     buildContext: '$(Build.SourcesDirectory)'
#     Dockerfile: 'ClaimStatus/Dockerfile' # Relative path from buildContext
#     tags: | 
#       '$(tag)'
#       latest

# - task: Docker@2
#   inputs:
#     containerRegistry: '$(dockerRegistryServiceConnection)'
#     repository: '$(imageRepository)'
#     command: 'buildAndPush'
#     Dockerfile: '$(dockerfilePath)'
#     tags: | 
#         '$(tag)'
#         latest
   